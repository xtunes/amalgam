%article
  %legend
    %span.right
      =link_to admin_new_resource_path(params[:resources]) ,:class => 'btn btn-primary' do
        %i.icon-plus.icon-white
        = "#{t('amalgam.admin.actions.new')}#{@resource_class.model_name.human}"
    = link_to "#{@resource_class.model_name.human}#{t('amalgam.admin.actions.index')}", admin_resources_path(params[:resources])
  - unless @resource_class.included_modules.include?(Amalgam::Types::Hierachical)
    %table.table.table-striped.table-bordered.table-hover
      - belonged_by = @resource_class.reflect_on_all_associations(:belongs_to)
      %thaed
        %tr
          - @resource_class.admin_attrs.each do |attr|
            - if attr.to_s != @resource_class.foreign_key.to_s
              %th= @resource_class.human_attribute_name(attr)
          - belonged_by.each do |item|
            - if !!item.klass && (item.klass != @resource_class)
              %th= item.klass.model_name.human
          %th
      %tbody
        - @collection.each do |resource|
          %tr
            - @resource_class.admin_attrs.each do |attr|
              - if attr.to_s != @resource_class.foreign_key.to_s
                %td= resource.send(attr)
            - belonged_by.each do |item|
              - if !!item.klass && (item.klass != @resource_class)
                %td
                  - parent = resource.source.send(item.instance_variable_get(:@name))
                  -if !!parent
                    - content = parent.respond_to?(:title) ? parent.send(:title) : "#{parent.class.model_name.human}_#{parent.id}"
                    = link_to content, admin_edit_resource_path(item.instance_variable_get(:@plural_name),parent.id)
            %td.right
              = link_to t("amalgam.admin.actions.edit_content"), amalgam.mercury_editor_path("#{resource.source.class.to_s.tableize}/#{resource.source.to_param}")
              = link_to t('amalgam.admin.actions.edit'), admin_edit_resource_path(params[:resources],resource.id)
              = link_to t('amalgam.admin.actions.destroy'), admin_resource_path(params[:resources],resource.id), :confirm => 'alert', :method => :delete
        = paginate @collection